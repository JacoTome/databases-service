plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.freefair.lombok' version '8.6'
	id 'io.spring.dependency-management' version '1.1.4'
}

ext {
	springCloudVersion = "2023.0.1"
}

group = 'musico.services'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.eclipse.rdf4j:rdf4j:5.0.0-M2'
	implementation 'org.eclipse.rdf4j:rdf4j-sparqlbuilder:5.0.0-M2'
	implementation 'org.eclipse.rdf4j:rdf4j-repository-sparql:5.0.0-M2'
	implementation 'org.eclipse.rdf4j:rdf4j-rio-rdfxml:5.0.0-M2'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	runtimeOnly 'com.mysql:mysql-connector-j'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
